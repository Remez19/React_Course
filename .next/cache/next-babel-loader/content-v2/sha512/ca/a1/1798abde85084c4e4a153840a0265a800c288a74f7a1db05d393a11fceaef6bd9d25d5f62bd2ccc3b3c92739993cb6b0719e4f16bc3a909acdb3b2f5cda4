{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/remez19/vsProjects/React/React-Nextjs-Project/pages/index.js\",\n    _this = this;\n\nimport MeetupList from \"../components/meetups/MeetupList\";\nvar DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"Haifa City\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/1/1d/Western_Haifa_from_the_air.jpg\",\n  address: \"Haifa\",\n  description: \"The First meetup\"\n}, {\n  id: \"m2\",\n  title: \"Haifa City\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/1/1d/Western_Haifa_from_the_air.jpg\",\n  address: \"Haifa-Center\",\n  description: \"The Second meetup\"\n}];\n\nvar HomePage = function HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, _this);\n};\n/*\n\nonly in component files that are in the pages floder.\nNextjs will look first for this kind of function \nand will call it before the component function.\nThe code inside the function wil not be excuted on the client side and,\nwill never endup in the client side.\nThe function needs to allways return an object.\nThe object must have a \"props\" \"field\" and this field must contain an object.\nthis object with the field \"props\" than will be sent as our props\nin our component.\nkida like in java or c (console arguments) main(argv, args).\nThe revalidate field handy in cases where we want to revalidate (get the data again).\nsometimes the data we are working with can be out-dated quickly therefor\nif we use revalidate (and as a value we need to give it a number)\nwe tell nextjs that we want to call getStaticProps every number of seconds \n(the number we set as an argument. here we set it to 10 - every 10 seconds)\n(only if requests come's to this path) \n*/\n// export async function getStaticProps() {\n//   // fetch data from database/Api/ or what ever\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//     revalidate: 10,\n//   };\n// }\n\n\n_c = HomePage;\nexport var __N_SSP = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/remez19/vsProjects/React/React-Nextjs-Project/pages/index.js"],"names":["MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,IAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,YAFT;AAGEC,EAAAA,KAAK,EACH,oFAJJ;AAKEC,EAAAA,OAAO,EAAE,OALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,YAFT;AAGEC,EAAAA,KAAK,EACH,oFAJJ;AAKEC,EAAAA,OAAO,EAAE,cALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA9BMF,Q;;AAkCN,eAAeA,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\n\nconst DUMMY_MEETUPS = [\n  {\n    id: \"m1\",\n    title: \"Haifa City\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/1/1d/Western_Haifa_from_the_air.jpg\",\n    address: \"Haifa\",\n    description: \"The First meetup\",\n  },\n  {\n    id: \"m2\",\n    title: \"Haifa City\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/1/1d/Western_Haifa_from_the_air.jpg\",\n    address: \"Haifa-Center\",\n    description: \"The Second meetup\",\n  },\n];\n\nconst HomePage = (props) => {\n  return <MeetupList meetups={props.meetups} />;\n};\n/*\n\nonly in component files that are in the pages floder.\nNextjs will look first for this kind of function \nand will call it before the component function.\nThe code inside the function wil not be excuted on the client side and,\nwill never endup in the client side.\nThe function needs to allways return an object.\nThe object must have a \"props\" \"field\" and this field must contain an object.\nthis object with the field \"props\" than will be sent as our props\nin our component.\nkida like in java or c (console arguments) main(argv, args).\nThe revalidate field handy in cases where we want to revalidate (get the data again).\nsometimes the data we are working with can be out-dated quickly therefor\nif we use revalidate (and as a value we need to give it a number)\nwe tell nextjs that we want to call getStaticProps every number of seconds \n(the number we set as an argument. here we set it to 10 - every 10 seconds)\n(only if requests come's to this path) \n*/\n// export async function getStaticProps() {\n//   // fetch data from database/Api/ or what ever\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//     revalidate: 10,\n//   };\n// }\n\nexport async function getServerSideProps() {}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}